#!/usr/bin/env bash
set -eo pipefail
shopt -s nullglob globstar

# define TMPDIR, if it's empty
if [[ -z "$TMPDIR" ]]; then
    TMPDIR="/tmp"
fi
echo "TMPDIR: $TMPDIR"

# activate conda env
eval "$(conda shell.bash hook)"
conda activate mt_mvae
echo "CONDA_PREFIX: $CONDA_PREFIX"

# Lookup table from jobid to temperature.
# First entry is for 1-based indices for job ids.
jobid_to_variance=(0 0.01 0.01 0.01 1 1 1 5 5 5 10 10 10 50 50 50 100 100 100)
VARIANCE=${jobid_to_variance[$LSB_JOBINDEX]}

# set constants
# DEBUG=false
# LOGDIR=""
METHOD="poe"  # NOTE: choices are 'joint_elbo', 'poe', 'moe', 'jsd'
LIKELIHOOD="laplace"
DIR_DATA="$PWD/data"
# DIR_CLASSIFIER="$PWD/trained_classifiers/MMNIST"
# DIR_EXPERIMENT_BASE="$PWD"
DIR_EXPERIMENT="$PWD/runs/${LSB_JOBNAME}_${LSB_JOBID}/var_${VARIANCE}/${LSB_JOBINDEX}"  # NOTE: experiment logs are written here
PATH_INC_V3="$PWD/pt_inception-2015-12-05-6726825d.pth"
DIR_FID="$TMPDIR/MMNIST"

VARIANCE=${VARIANCE:-1}

echo "Variance: $VARIANCE"

# copy data to TMPDIR, if the data does not already lie there
if [ ! -d "$TMPDIR/MMNIST" ]; then
    echo "Copying data to $TMPDIR..."
    cp -r "${DIR_DATA}/PolyMNIST.zip" "${TMPDIR}/"
    cd $TMPDIR
    unzip -q PolyMNIST.zip
    cd -
fi
# cp -r "${DIR_DATA}/SVHN" "${TMPDIR}/"
# cp -r "${DIR_DATA}/MNISTSVHN" "${TMPDIR}/"

python main_mmnist_vanilla.py \
            --unimodal-datapaths-train "$TMPDIR/MMNIST/train/m"{0..4} \
            --unimodal-datapaths-test "$TMPDIR/MMNIST/test/m"{0..4} \
            --pretrained-classifier-paths "$PWD/trained_classifiers/trained_classifiers_polyMNIST/pretrained_img_to_digit_classifier_m"{0..4} \
            --dir_experiment="$DIR_EXPERIMENT" \
            --inception_state_dict="$PATH_INC_V3" \
            --dir_fid="$DIR_FID" \
            --method=$METHOD \
            --style_dim=0 \
            --class_dim=512 \
            --beta=1 \
            --likelihood=$LIKELIHOOD \
            --batch_size=256 \
            --initial_learning_rate=0.0005 \
            --eval_freq=100 \
            --eval_freq_fid=100 \
            --data_multiplications=1 \
            --num_hidden_layers=1 \
            --end_epoch=1000 \
            --use_classifier \
            --eval_lr \
            --calc_prd \
            --calc_nll \
            --latent_constant_variances=$VARIANCE

